#--------------------------------------------------------
# To use an environment variable, use the following syntax :  ${env:NAME_OF_ENV_VARIABLE}
# For example :
#   sonar.jdbc.url: ${env:SONAR_JDBC_URL}
#
#
# See also the file conf/wrapper.conf for JVM advanced settings
#---------------------------------------------------------


#---------------------------------------------------------
# WEB SETTINGS - STANDALONE MODE ONLY
# These settings are ignored when the war file is deployed to a JEE server.
#---------------------------------------------------------
# Listen host/port and context path (for example / or /sonar). Default values are 0.0.0.0:9000/.
#sonar.web.host:                           0.0.0.0
#sonar.web.port:                           9000
#sonar.web.context:                        /

# Log HTTP requests. Deactivated by default.
#sonar.web.jettyRequestLogs: ../../logs/jetty-yyyy_mm_dd.request.log

# Apache mod_jk connector. Supported only in standalone mode. 
# Uncomment to activate AJP13 connector. 
#sonar.ajp13.port: 8009


#-----------------------------------------------------------------------
# DATABASE
#
# IMPORTANT : the embedded database Derby is used by default. 
# It is recommended for tests only. Please use an external database
# for production environment (MySQL, Oracle, Postgresql, SQLServer)
#
#-----------------------------------------------------------------------

#----- Credentials
# Permissions to create tables and indexes must be granted to JDBC user.
# The schema must be created first.
sonar.jdbc.username:                       ${env:SONAR_JDBC_USERNAME}
sonar.jdbc.password:                       ${env:SONAR_JDBC_PASSWORD}

#----- Embedded database Derby
# Note : it does accept connections from remote hosts, so the
# sonar server and the maven plugin must be executed on the same host.
  
# Comment the following lines to deactivate the default embedded database.
sonar.jdbc.url:                            ${env:SONAR_JDBC_URL}
sonar.jdbc.driverClassName:                ${env:SONAR_JDBC_DRIVERCLASSNAME}
#sonar.jdbc.validationQuery:                values(1)

# directory containing Derby database files. By default it's the /data directory in the sonar installation.
#sonar.embeddedDatabase.dataDir:
# derby embedded database server listening port, defaults to 1527
#sonar.derby.drda.portNumber:               1527

# uncomment to accept connections from remote hosts. Ba default it only accepts localhost connections.
#sonar.derby.drda.host: 0.0.0.0

#----- MySQL 5.x/6.x
# Comment the embedded database and uncomment the following properties to use MySQL. The validation query is optional.
#sonar.jdbc.url:                            jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8
#sonar.jdbc.driverClassName:                com.mysql.jdbc.Driver
#sonar.jdbc.validationQuery:                select 1


#----- Oracle 10g/11g
# To connect to Oracle database :
#
# - It's recommended to use the latest version of the JDBC driver (either ojdbc6.jar for Java 6 or ojdbc5.jar for Java 5).
#   Download it in http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html
# - Copy the driver to the directory extensions/jdbc-driver/oracle/
# - Comment the embedded database and uncomment the following properties. The validation query is optional.
#
#sonar.jdbc.url:                            jdbc:oracle:thin:@localhost/XE
#sonar.jdbc.driverClassName:                oracle.jdbc.OracleDriver
#sonar.jdbc.validationQuery:                select 1 from dual

# Uncomment the following property if multiple Sonar schemas are installed on the same server 
# (for example with different versions).
# In that case, use the same property during project analysis (-Dsonar.hibernate.default_schema=<schema>)
#sonar.hibernate.default_schema:            sonar

#----- PostgreSQL 8.x, 9.x
# Uncomment the following properties to use PostgreSQL. The validation query is optional.
#sonar.jdbc.url:                            jdbc:postgresql://localhost/sonar
#sonar.jdbc.driverClassName:                org.postgresql.Driver
#sonar.jdbc.validationQuery:                select 1

# If the PostgreSql database contains several schemas, the following property must define the schema to be used
#sonar.jdbc.postgreSearchPath:              public


#----- Microsoft SQLServer
# The Jtds open source driver is available in extensions/jdbc-driver/mssql. More details on http://jtds.sourceforge.net
# The validation query is optional.
#sonar.jdbc.url:                            jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor
#sonar.jdbc.driverClassName:                net.sourceforge.jtds.jdbc.Driver
#sonar.jdbc.validationQuery:                select 1  


#----- Connection pool settings
sonar.jdbc.maxActive:                      ${env:SONAR_JDBC_MAXACTIVE}
sonar.jdbc.maxIdle:                        ${env:SONAR_JDBC_MAXIDLE}
sonar.jdbc.minIdle:                        ${env:SONAR_JDBC_MINIDLE}
sonar.jdbc.maxWait:                        ${env:SONAR_JDBC_MAXWAIT}
sonar.jdbc.minEvictableIdleTimeMillis:     ${env:SONAR_JDBC_MINEVICTABLEIDLETIMEMILLIS}
sonar.jdbc.timeBetweenEvictionRunsMillis:  ${env:SONAR_JDBC_TIMEBETWEENEVICTIONRUNSMILLIS}


#---------------------------------------------------------
# UPDATE CENTER
#---------------------------------------------------------

# The Update Center requires an internet connection to request http://update.sonarsource.org
# It is activated by default:
sonar.updatecenter.activate=${env:SONAR_UPDATECENTER_ACTIVATE}

# HTTP proxy (default none)
#http.proxyHost=
#http.proxyPort=

# NT domain name if NTLM proxy is used
#http.auth.ntlm.domain=

# SOCKS proxy (default none)
#socksProxyHost=
#socksProxyPort=

# proxy authentication. The 2 following properties are used for HTTP and SOCKS proxies.
#http.proxyUser=
#http.proxyPassword=

#---------------------------------------------------------
# NOTIFICATIONS
#---------------------------------------------------------

# Delay (in seconds) between processing of notification queue
sonar.notifications.delay=${env:SONAR_NOTIFICATIONS_DELAY}
